{
	"objects" : [
		"ACF",
		"Alfalfa",
		"allCoef",
		"anova.lme",
		"asOneFormula",
		"Assay",
		"asTable",
		"augPred",
		"balancedGrouped",
		"bdf",
		"BodyWeight",
		"Cefamandole",
		"collapse",
		"compareFits",
		"comparePred",
		"corAR1",
		"corARMA",
		"corCAR1",
		"corCompSymm",
		"corExp",
		"corFactor",
		"corGaus",
		"corIdent",
		"corLin",
		"corMatrix",
		"corNatural",
		"corRatio",
		"corSpatial",
		"corSpher",
		"corSymm",
		"Dialyzer",
		"Dim",
		"Earthquake",
		"ergoStool",
		"Fatigue",
		"fdHess",
		"fixed.effects",
		"fixef",
		"gapply",
		"Gasoline",
		"getCovariate",
		"getCovariateFormula",
		"getData",
		"getGroups",
		"getGroupsFormula",
		"getResponse",
		"getResponseFormula",
		"getVarCov",
		"gls",
		"glsApVar",
		"glsControl",
		"glsEstimate",
		"glsStruct",
		"Glucose",
		"Glucose2",
		"gnls",
		"gnlsControl",
		"gnlsStruct",
		"groupedData",
		"gsummary",
		"Gun",
		"IGF",
		"Initialize",
		"intervals",
		"isBalanced",
		"isInitialized",
		"LDEsysMat",
		"lme",
		"lme.formula",
		"lme.lmList",
		"lmeControl",
		"lmeStruct",
		"lmList",
		"lmList.formula",
		"logDet",
		"Machines",
		"MathAchieve",
		"MathAchSchool",
		"Meat",
		"Milk",
		"Muscle",
		"Names",
		"needUpdate",
		"nfGroupedData",
		"Nitrendipene",
		"nlme",
		"nlme.formula",
		"nlme.nlsList",
		"nlmeControl",
		"nlmeStruct",
		"nlsList",
		"nlsList.formula",
		"nmGroupedData",
		"Oats",
		"Orthodont",
		"Ovary",
		"Oxboys",
		"Oxide",
		"PBG",
		"pdBlocked",
		"pdCompSymm",
		"pdConstruct",
		"pdDiag",
		"pdFactor",
		"pdIdent",
		"pdLogChol",
		"pdMat",
		"pdMatrix",
		"pdNatural",
		"pdSymm",
		"Phenobarb",
		"phenoModel",
		"Pixel",
		"plot.lme",
		"pooledSD",
		"Quinidine",
		"quinModel",
		"Rail",
		"random.effects",
		"ranef",
		"RatPupWeight",
		"recalc",
		"Relaxin",
		"Remifentanil",
		"reStruct",
		"simulate.lme",
		"Soybean",
		"splitFormula",
		"Spruce",
		"Tetracycline1",
		"Tetracycline2",
		"varComb",
		"varConstPower",
		"VarCorr",
		"varExp",
		"varFixed",
		"varFunc",
		"varIdent",
		"Variogram",
		"varPower",
		"varWeights",
		"Wafer",
		"Wheat",
		"Wheat2"
	],
	"methods" : {
		"ACF" : "ACF(object, maxLag, ...) ",
		"allCoef" : "allCoef(..., extract = coef) ",
		"anova.lme" : "anova.lme(object, ..., test = TRUE, type = c(\"sequential\", \"marginal\"), adjustSigma = TRUE, Terms, L, verbose = FALSE) ",
		"asOneFormula" : "asOneFormula(..., omit = c(\".\", \"pi\")) ",
		"asTable" : "asTable(object) ",
		"augPred" : "augPred(object, primary = NULL, minimum = min(primary), maximum = max(primary), length.out = 51, ...) ",
		"balancedGrouped" : "balancedGrouped(form, data, labels = NULL, units = NULL) ",
		"collapse" : "collapse(object, ...) ",
		"compareFits" : "compareFits(object1, object2, which = 1:ncol(object1)) ",
		"comparePred" : "comparePred(object1, object2, primary = NULL, minimum = min(primary), maximum = max(primary), length.out = 51, level = NULL, ...) ",
		"corAR1" : "corAR1(value = 0, form = ~1, fixed = FALSE) ",
		"corARMA" : "corARMA(value = double(p + q), form = ~1, p = 0, q = 0, fixed = FALSE) ",
		"corCAR1" : "corCAR1(value = 0.2, form = ~1, fixed = FALSE) ",
		"corCompSymm" : "corCompSymm(value = 0, form = ~1, fixed = FALSE) ",
		"corExp" : "corExp(value = numeric(0), form = ~1, nugget = FALSE, metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corFactor" : "corFactor(object, ...) ",
		"corGaus" : "corGaus(value = numeric(0), form = ~1, nugget = FALSE, metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corIdent" : "corIdent(form = NULL) ",
		"corLin" : "corLin(value = numeric(0), form = ~1, nugget = FALSE, metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corMatrix" : "corMatrix(object, ...) ",
		"corNatural" : "corNatural(value = numeric(0), form = ~1, fixed = FALSE) ",
		"corRatio" : "corRatio(value = numeric(0), form = ~1, nugget = FALSE, metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corSpatial" : "corSpatial(value = numeric(0), form = ~1, nugget = FALSE, type = c(\"spherical\", \"exponential\", \"gaussian\", \"linear\", \"rational\"), metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corSpher" : "corSpher(value = numeric(0), form = ~1, nugget = FALSE, metric = c(\"euclidean\", \"maximum\", \"manhattan\"), fixed = FALSE) ",
		"corSymm" : "corSymm(value = numeric(0), form = ~1, fixed = FALSE) ",
		"Dim" : "Dim(object, ...) ",
		"fdHess" : "fdHess(pars, fun, ..., .relStep = .Machine$double.eps^(1/3), minAbsPar = 0) ",
		"fixed.effects" : "fixed.effects(object, ...) ",
		"fixef" : "fixef(object, ...) ",
		"gapply" : "gapply(object, which, FUN, form = formula(object), level, groups = getGroups(object, form, level), ...) ",
		"getCovariate" : "getCovariate(object, form = formula(object), data) ",
		"getCovariateFormula" : "getCovariateFormula(object) ",
		"getData" : "getData(object) ",
		"getGroups" : "getGroups(object, form = formula(object), level, data, sep = \"/\") ",
		"getGroupsFormula" : "getGroupsFormula(object, asList = FALSE, sep = \"/\") ",
		"getResponse" : "getResponse(object, form = formula(object)) ",
		"getResponseFormula" : "getResponseFormula(object) ",
		"getVarCov" : "getVarCov(obj, ...) ",
		"gls" : "gls(model, data = sys.frame(sys.parent()), correlation = NULL, weights = NULL, subset, method = c(\"REML\", \"ML\"), na.action = na.fail, control = list(), verbose = FALSE) ",
		"glsApVar" : "glsApVar(glsSt, sigma, conLin = attr(glsSt, \"conLin\"), .relStep = .Machine$double.eps^(1/3), minAbsPar = 0, natural = TRUE) ",
		"glsControl" : "glsControl(maxIter = 50L, msMaxIter = 200L, tolerance = 1e-06, msTol = 1e-07, msVerbose = FALSE, singular.ok = FALSE, returnObject = FALSE, apVar = TRUE, .relStep = .Machine$double.eps^(1/3), opt = c(\"nlminb\",     \"optim\"), optimMethod = \"BFGS\", minAbsParApVar = 0.05, natural = TRUE, sigma = NULL) ",
		"glsEstimate" : "glsEstimate(object, conLin = attr(object, \"conLin\"), control = list(singular.ok = FALSE)) ",
		"glsStruct" : "glsStruct(corStruct = NULL, varStruct = NULL) ",
		"gnls" : "gnls(model, data = sys.frame(sys.parent()), params, start, correlation = NULL, weights = NULL, subset, na.action = na.fail, naPattern, control = list(), verbose = FALSE) ",
		"gnlsControl" : "gnlsControl(maxIter = 50, nlsMaxIter = 7, msMaxIter = 50, minScale = 0.001, tolerance = 1e-06, nlsTol = 0.001, msTol = 1e-07, returnObject = FALSE, msVerbose = FALSE, apVar = TRUE, .relStep = .Machine$double.eps^(1/3), opt = c(\"nlminb\", \"optim\"), optimMethod = \"BFGS\", minAbsParApVar = 0.05, sigma = NULL) ",
		"gnlsStruct" : "gnlsStruct(corStruct = NULL, varStruct = NULL) ",
		"groupedData" : "groupedData(formula, data = sys.parent(1), order.groups = TRUE, FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL, labels = NULL, units = NULL) ",
		"gsummary" : "gsummary(object, FUN = function(x) mean(x, na.rm = TRUE), omitGroupingFactor = FALSE, form = formula(object), level, groups = getGroups(object,     form, level), invariantsOnly = FALSE, ...) ",
		"Initialize" : "Initialize(object, data, ...) ",
		"intervals" : "intervals(object, level = 0.95, ...) ",
		"isBalanced" : "isBalanced(object, countOnly = FALSE, level) ",
		"isInitialized" : "isInitialized(object) ",
		"LDEsysMat" : "LDEsysMat(pars, incidence) ",
		"lme" : "lme(fixed, data = sys.frame(sys.parent()), random, correlation = NULL, weights = NULL, subset, method = c(\"REML\", \"ML\"), na.action = na.fail, control = list(), contrasts = NULL, keep.data = TRUE) ",
		"lme.formula" : "lme.formula(fixed, data = sys.frame(sys.parent()), random = pdSymm(eval(as.call(fixed[-2]))), correlation = NULL, weights = NULL, subset, method = c(\"REML\",     \"ML\"), na.action = na.fail, control = list(), contrasts = NULL, keep.data = TRUE) ",
		"lme.lmList" : "lme.lmList(fixed, data = sys.frame(sys.parent()), random, correlation = NULL, weights = NULL, subset, method = c(\"REML\", \"ML\"), na.action = na.fail, control = list(), contrasts = NULL, keep.data = TRUE) ",
		"lmeControl" : "lmeControl(maxIter = 50, msMaxIter = 50, tolerance = 1e-06, niterEM = 25, msMaxEval = 200, msTol = 1e-07, msVerbose = FALSE, returnObject = FALSE, gradHess = TRUE, apVar = TRUE, .relStep = .Machine$double.eps^(1/3), minAbsParApVar = 0.05, opt = c(\"nlminb\", \"optim\"), optimMethod = \"BFGS\", natural = TRUE, sigma = NULL, ...) ",
		"lmeStruct" : "lmeStruct(reStruct, corStruct = NULL, varStruct = NULL) ",
		"lmList" : "lmList(object, data, level, subset, na.action = na.fail, pool = TRUE, warn.lm = TRUE) ",
		"lmList.formula" : "lmList.formula(object, data, level, subset, na.action = na.fail, pool = TRUE, warn.lm = TRUE) ",
		"logDet" : "logDet(object, ...) ",
		"Names" : "Names(object, ...) ",
		"needUpdate" : "needUpdate(object) ",
		"nfGroupedData" : "nfGroupedData(formula, data = sys.parent(1), order.groups = TRUE, FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL, labels = NULL, units = NULL) ",
		"nlme" : "nlme(model, data = sys.frame(sys.parent()), fixed, random = fixed, groups, start, correlation = NULL, weights = NULL, subset, method = c(\"ML\", \"REML\"), na.action = na.fail, naPattern, control = list(), verbose = FALSE) ",
		"nlme.formula" : "nlme.formula(model, data = sys.frame(sys.parent()), fixed, random, groups, start, correlation = NULL, weights = NULL, subset, method = c(\"ML\", \"REML\"), na.action = na.fail, naPattern, control = list(), verbose = FALSE) ",
		"nlme.nlsList" : "nlme.nlsList(model, data = sys.frame(sys.parent()), fixed, random = fixed, groups, start, correlation = NULL, weights = NULL, subset, method = c(\"ML\", \"REML\"), na.action = na.fail, naPattern, control = list(), verbose = FALSE) ",
		"nlmeControl" : "nlmeControl(maxIter = 50, pnlsMaxIter = 7, msMaxIter = 50, minScale = 0.001, tolerance = 1e-05, niterEM = 25, pnlsTol = 0.001, msTol = 1e-06, returnObject = FALSE, msVerbose = FALSE, gradHess = TRUE, apVar = TRUE, .relStep = .Machine$double.eps^(1/3), minAbsParApVar = 0.05, opt = c(\"nlminb\", \"nlm\"), natural = TRUE, sigma = NULL, ...) ",
		"nlmeStruct" : "nlmeStruct(reStruct, corStruct = NULL, varStruct = NULL) ",
		"nlsList" : "nlsList(model, data, start, control, level, subset, na.action = na.fail, pool = TRUE, warn.nls = NA) ",
		"nlsList.formula" : "nlsList.formula(model, data, start = NULL, control, level, subset, na.action = na.fail, pool = TRUE, warn.nls = NA) ",
		"nmGroupedData" : "nmGroupedData(formula, data = sys.parent(1), order.groups = TRUE, FUN = function(x) max(x, na.rm = TRUE), outer = NULL, inner = NULL, labels = NULL, units = NULL) ",
		"pdBlocked" : "pdBlocked(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()), pdClass = \"pdSymm\") ",
		"pdCompSymm" : "pdCompSymm(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ",
		"pdConstruct" : "pdConstruct(object, value, form, nam, data, ...) ",
		"pdDiag" : "pdDiag(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ",
		"pdFactor" : "pdFactor(object) ",
		"pdIdent" : "pdIdent(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ",
		"pdLogChol" : "pdLogChol(value = numeric(0), form = NULL, nam = NULL, data = sys.parent()) ",
		"pdMat" : "pdMat(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent()), pdClass = \"pdSymm\") ",
		"pdMatrix" : "pdMatrix(object, factor = FALSE) ",
		"pdNatural" : "pdNatural(value = numeric(0), form = NULL, nam = NULL, data = sys.frame(sys.parent())) ",
		"pdSymm" : "pdSymm(value = numeric(0), form = NULL, nam = NULL, data = parent.frame()) ",
		"phenoModel" : "phenoModel(Subject, time, dose, lCl, lV) ",
		"plot.lme" : "plot.lme(x, form = resid(., type = \"pearson\") ~ fitted(.), abline, id = NULL, idLabels = NULL, idResType = c(\"pearson\", \"normalized\"), grid, ...) ",
		"pooledSD" : "pooledSD(object) ",
		"quinModel" : "quinModel(Subject, time, conc, dose, interval, lV, lKa, lCl) ",
		"random.effects" : "random.effects(object, ...) ",
		"ranef" : "ranef(object, ...) ",
		"recalc" : "recalc(object, conLin, ...) ",
		"reStruct" : "reStruct(object, pdClass = \"pdLogChol\", REML = FALSE, data = sys.frame(sys.parent())) ",
		"simulate.lme" : "simulate.lme(object, nsim = 1, seed = as.integer(runif(1, 0, .Machine$integer.max)), m2, method = c(\"REML\", \"ML\"), niterEM = c(40, 200), useGen, ...) ",
		"splitFormula" : "splitFormula(form, sep = \"/\") ",
		"varComb" : "varComb(...) ",
		"varConstPower" : "varConstPower(const = numeric(0), power = numeric(0), form = ~fitted(.), fixed = NULL) ",
		"VarCorr" : "VarCorr(x, sigma = 1, ...) ",
		"varExp" : "varExp(value = numeric(0), form = ~fitted(.), fixed = NULL) ",
		"varFixed" : "varFixed(value = ~1) ",
		"varFunc" : "varFunc(object) ",
		"varIdent" : "varIdent(value = numeric(0), form = ~1, fixed = NULL) ",
		"Variogram" : "Variogram(object, distance, ...) ",
		"varPower" : "varPower(value = numeric(0), form = ~fitted(.), fixed = NULL) ",
		"varWeights" : "varWeights(object) "
	}
}