{
	"objects" : [
		"all_labels",
		"all_patterns",
		"asis_output",
		"clean_cache",
		"combine_words",
		"current_input",
		"dep_auto",
		"dep_prev",
		"engine_output",
		"fig_chunk",
		"fig_path",
		"hook_ffmpeg_html",
		"hook_movecode",
		"hook_optipng",
		"hook_pdfcrop",
		"hook_plot_asciidoc",
		"hook_plot_custom",
		"hook_plot_html",
		"hook_plot_md",
		"hook_plot_rst",
		"hook_plot_tex",
		"hook_plot_textile",
		"hook_purl",
		"hook_r2swf",
		"hook_scianimator",
		"image_uri",
		"imgur_upload",
		"include_app",
		"include_graphics",
		"include_url",
		"inline_expr",
		"kable",
		"knit",
		"knit_child",
		"knit_engines",
		"knit_exit",
		"knit_expand",
		"knit_filter",
		"knit_global",
		"knit_hooks",
		"knit_meta",
		"knit_meta_add",
		"knit_params",
		"knit_params_yaml",
		"knit_patterns",
		"knit_print",
		"knit_rd",
		"knit_rd_all",
		"knit_theme",
		"knit_watch",
		"knit2html",
		"knit2pdf",
		"knit2wp",
		"load_cache",
		"normal_print",
		"opts_chunk",
		"opts_current",
		"opts_hooks",
		"opts_knit",
		"opts_template",
		"pandoc",
		"pat_asciidoc",
		"pat_brew",
		"pat_html",
		"pat_md",
		"pat_rnw",
		"pat_rst",
		"pat_tex",
		"pat_textile",
		"plot_crop",
		"purl",
		"rand_seed",
		"read_chunk",
		"read_demo",
		"read_rforge",
		"render_asciidoc",
		"render_html",
		"render_jekyll",
		"render_latex",
		"render_listings",
		"render_markdown",
		"render_rst",
		"render_sweave",
		"render_textile",
		"rocco",
		"rst2pdf",
		"set_alias",
		"set_header",
		"set_parent",
		"spin",
		"spin_child",
		"stitch",
		"stitch_rhtml",
		"stitch_rmd",
		"Sweave2knitr",
		"wrap_rmd",
		"write_bib"
	],
	"methods" : {
		"all_labels" : "all_labels(...) ",
		"asis_output" : "asis_output(x, meta = NULL, cacheable = NA) ",
		"clean_cache" : "clean_cache(clean = FALSE, path = opts_chunk$get(\"cache.path\")) ",
		"combine_words" : "combine_words(words, sep = \", \", and = \" and \", before = \"\", after = before) ",
		"current_input" : "current_input(dir = FALSE) ",
		"dep_auto" : "dep_auto(path = opts_chunk$get(\"cache.path\")) ",
		"dep_prev" : "dep_prev() ",
		"engine_output" : "engine_output(options, code, out, extra = NULL) ",
		"fig_chunk" : "fig_chunk(label, ext = \"\", number, fig.path = opts_chunk$get(\"fig.path\")) ",
		"fig_path" : "fig_path(suffix = \"\", options = opts_current$get(), number) ",
		"hook_ffmpeg_html" : "hook_ffmpeg_html(x, options) ",
		"hook_movecode" : "hook_movecode(x) ",
		"hook_optipng" : "hook_optipng(before, options, envir) ",
		"hook_pdfcrop" : "hook_pdfcrop(before, options, envir) ",
		"hook_plot_asciidoc" : "hook_plot_asciidoc(x, options) ",
		"hook_plot_custom" : "hook_plot_custom(before, options, envir) ",
		"hook_plot_html" : "hook_plot_html(x, options) ",
		"hook_plot_md" : "hook_plot_md(x, options) ",
		"hook_plot_rst" : "hook_plot_rst(x, options) ",
		"hook_plot_tex" : "hook_plot_tex(x, options) ",
		"hook_plot_textile" : "hook_plot_textile(x, options) ",
		"hook_purl" : "hook_purl(before, options, envir) ",
		"hook_r2swf" : "hook_r2swf(x, options) ",
		"hook_scianimator" : "hook_scianimator(x, options) ",
		"image_uri" : "image_uri(f) ",
		"imgur_upload" : "imgur_upload(file, key = \"9f3460e67f308f6\") ",
		"include_app" : "include_app(url, height = \"400px\") ",
		"include_graphics" : "include_graphics(path, auto_pdf = TRUE, dpi = NULL) ",
		"include_url" : "include_url(url, height = \"400px\") ",
		"inline_expr" : "inline_expr(code, syntax) ",
		"kable" : "kable(x, format, digits = getOption(\"digits\"), row.names = NA, col.names = NA, align, caption = NULL, format.args = list(), escape = TRUE, ...) ",
		"knit" : "knit(input, output = NULL, tangle = FALSE, text = NULL, quiet = FALSE, envir = parent.frame(), encoding = getOption(\"encoding\")) ",
		"knit_child" : "knit_child(..., options = NULL, envir = knit_global()) ",
		"knit_exit" : "knit_exit(append) ",
		"knit_expand" : "knit_expand(file, ..., text = readLines(file, warn = FALSE), delim = c(\"{{\", \"}}\")) ",
		"knit_filter" : "knit_filter(ifile, encoding = \"unknown\") ",
		"knit_global" : "knit_global() ",
		"knit_meta" : "knit_meta(class = NULL, clean = TRUE) ",
		"knit_meta_add" : "knit_meta_add(meta, label = \"\") ",
		"knit_params" : "knit_params(text, evaluate = TRUE) ",
		"knit_params_yaml" : "knit_params_yaml(yaml, evaluate = TRUE) ",
		"knit_print" : "knit_print(x, ...) ",
		"knit_rd" : "knit_rd(pkg, links = tools::findHTMLlinks(), frame = TRUE) ",
		"knit_rd_all" : "knit_rd_all() ",
		"knit_watch" : "knit_watch(input, compile = knit, interval = 1, ...) ",
		"knit2html" : "knit2html(input, output = NULL, ..., envir = parent.frame(), text = NULL, quiet = FALSE, encoding = getOption(\"encoding\"), force_v1 = FALSE) ",
		"knit2pdf" : "knit2pdf(input, output = NULL, compiler = NULL, envir = parent.frame(), quiet = FALSE, encoding = getOption(\"encoding\"), ...) ",
		"knit2wp" : "knit2wp(input, title = \"A post from knitr\", ..., envir = parent.frame(), shortcode = FALSE, action = c(\"newPost\", \"editPost\", \"newPage\"), postid, encoding = getOption(\"encoding\"), publish = TRUE) ",
		"load_cache" : "load_cache(label, object, notfound = \"NOT AVAILABLE\", path = opts_chunk$get(\"cache.path\"), lazy = TRUE) ",
		"normal_print" : "normal_print(x, ...) ",
		"pandoc" : "pandoc(input, format, config = getOption(\"config.pandoc\"), ext = NA, encoding = getOption(\"encoding\")) ",
		"pat_asciidoc" : "pat_asciidoc() ",
		"pat_brew" : "pat_brew() ",
		"pat_html" : "pat_html() ",
		"pat_md" : "pat_md() ",
		"pat_rnw" : "pat_rnw() ",
		"pat_rst" : "pat_rst() ",
		"pat_tex" : "pat_tex() ",
		"pat_textile" : "pat_textile() ",
		"plot_crop" : "plot_crop(x, quiet = !opts_knit$get(\"progress\")) ",
		"purl" : "purl(..., documentation = 1L) ",
		"read_chunk" : "read_chunk(path, lines = readLines(path, warn = FALSE), labels = NULL, from = NULL, to = NULL, from.offset = 0L, to.offset = 0L) ",
		"read_demo" : "read_demo(topic, package = NULL, ...) ",
		"read_rforge" : "read_rforge(path, project, extra = \"\") ",
		"render_asciidoc" : "render_asciidoc() ",
		"render_html" : "render_html() ",
		"render_jekyll" : "render_jekyll(highlight = c(\"pygments\", \"prettify\", \"none\"), extra = \"\") ",
		"render_latex" : "render_latex() ",
		"render_listings" : "render_listings() ",
		"render_markdown" : "render_markdown(strict = FALSE, fence_char = \"`\") ",
		"render_rst" : "render_rst(strict = FALSE) ",
		"render_sweave" : "render_sweave() ",
		"render_textile" : "render_textile() ",
		"rocco" : "rocco(input, ...) ",
		"rst2pdf" : "rst2pdf(input, command = \"rst2pdf\", options = \"\") ",
		"set_alias" : "set_alias(...) ",
		"set_header" : "set_header(...) ",
		"set_parent" : "set_parent(parent) ",
		"spin" : "spin(hair, knit = TRUE, report = TRUE, text = NULL, envir = parent.frame(), format = c(\"Rmd\", \"Rnw\", \"Rhtml\", \"Rtex\", \"Rrst\"), doc = \"^#+'[ ]?\", inline = \"^[{][{](.+)[}][}][ ]*$\", comment = c(\"^[# ]*/[*]\",     \"^.*[*]/ *$\"), precious = !knit && is.null(text)) ",
		"spin_child" : "spin_child(input, format) ",
		"stitch" : "stitch(script, template = system.file(\"misc\", \"knitr-template.Rnw\", package = \"knitr\"), output = NULL, text = NULL, envir = parent.frame()) ",
		"stitch_rhtml" : "stitch_rhtml(..., envir = parent.frame()) ",
		"stitch_rmd" : "stitch_rmd(..., envir = parent.frame()) ",
		"Sweave2knitr" : "Sweave2knitr(file, output = gsub(\"[.]([^.]+)$\", \"-knitr.\\\\1\", file), encoding = getOption(\"encoding\"), text = NULL) ",
		"wrap_rmd" : "wrap_rmd(file, width = 80, text = NULL, backup) ",
		"write_bib" : "write_bib(x = .packages(), file = \"\", tweak = TRUE, prefix = getOption(\"knitr.bib.prefix\", \"R-\")) "
	}
}