[
    // fix double quotes in Rnw
    { "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex.rsweave source.r" }
        ]
    },
    // fix single quotes in Rnw
    { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex.rsweave source.r" }
        ]
    },

    // Roxygen
    { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*#\\s*$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.r" }
        ]
    },

    // comment indentation
    { "keys": ["enter"], "command": "insert", "args": {"characters": "\n#' "}, "context":
        [
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^#'.*$", "match_all": true },
            { "key": "selection_empty", "match_all": true, "operand": true, "operator": "equal"},
            { "key": "selector", "operator": "equal", "operand": "source.r" }
        ]
    },

    // source prompt
    { "keys": ["\""], "command": "r_box_source_prompt", "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "(?:source|sourceCpp)\\($", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:'|\"|\\)| |$)", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.r" }
        ]
    },

    // completions for package objects
    { "keys": [":"], "command": "r_box_auto_complete", "args": {"key": ":"}, "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": ":$", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.r, source.r-console" }
        ]
    },
    // completions for package objects
    { "keys": ["tab"], "command": "r_box_auto_complete", "context":
        [
            { "key": "preceding_text", "operator": "regex_contains", "operand": "::$", "match_all": true },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.r, source.r-console" },
            { "key": "has_next_field", "operator": "equal", "operand": false },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false }
        ]
    },
    // completions for package objects
    { "keys": ["tab"], "command": "r_box_auto_complete", "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "(,\\s*|\\()$", "match_all": true },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "meta.function-call.r" },
            { "key": "has_next_field", "operator": "equal", "operand": false },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false }
        ]
    }
]
