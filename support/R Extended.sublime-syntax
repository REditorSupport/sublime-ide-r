%YAML 1.2
---
name: R Extended
file_extensions: [R, r, S, s, Rprofile]
scope: source.r

contexts:
  comments:
    - match: '#.*$'
      scope: comment.line.number-sign.r

  constants:
    - match: \b(pi|letters|LETTERS|month\.abb|month\.name)\b
      scope: support.constant.misc.r
    - match: \b(TRUE|FALSE|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_|Inf|NaN)\b
      scope: constant.language.r
    - match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b
      scope: constant.numeric.r

  keywords:
    - match: \b(break|next|repeat|else|in)\b
      scope: keyword.control.r
    - match: \b(ifelse|if|for|return|switch|while|invisible)\b(?=\s*\()
      scope: keyword.control.r
    - match: (\-|\+|\*|\/|%\/%|%%|%\*%|%in%|%o%|%x%|\^|:=|%between%|%chin%|%like%|%\+%|%\+replace%|%:%|%do%|%dopar%|%>%|%<>%|%T>%|%\$%)
      scope: keyword.operator.arithmetic.r
    - match: (=|<-|<<-|->|->>)
      scope: keyword.operator.assignment.r
    - match: (==|!=|<>|<|>|<=|>=)
      scope: keyword.operator.comparison.r
    - match: (!|&{1,2}|[|]{1,2})
      scope: keyword.operator.logical.r
    - match: (\.\.\.|\$|:|\~|@)
      scope: keyword.other.r

  storage-types:
    - match: \b(character|complex|double|expression|integer|list|logical|numeric|single|raw)\b(\s*\()
      captures:
        1: storage.type.r
      push:
        - meta_scope: meta.function-call.r
        - meta_content_scope: meta.function-call.parameters.r
        - match: '[a-zA-Z._][a-zA-Z0-9._]*(?=\s*=)'
          scope: variable.parameter.r
        - match: '(?==)'
          push:
            - include: main
            - match: (?=[,)])
              pop: true
        - match: \)
          pop: true
        - include: main

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.r
      push:
        - meta_scope: string.quoted.double.r
        - match: \\.
          scope: constant.character.escape.r
        - match: '"'
          scope: punctuation.definition.string.end.r
          pop: true
    - match: "'"
      scope: punctuation.definition.string.begin.r
      push:
        - meta_scope: string.quoted.single.r
        - match: \\.
          scope: constant.character.escape.r
        - match: "'"
          scope: punctuation.definition.string.end.r
          pop: true

  brackets:
    - match: \(
      push:
        - match: \)
          pop: true
        - include: main

  fndefs:
    - match: ^\s*([a-zA-Z._][a-zA-Z0-9._]*)\s*(<-|=)\s*(function)\s*(\()
      captures:
        1: entity.name.function.r
        2: keyword.operator.assignment.r
        3: keyword.control.r
      push:
        - meta_scope: meta.function.r
        - meta_content_scope: meta.function.parameters.r
        - match: '[a-zA-Z._][a-zA-Z0-9._]*'
          scope: variable.parameter.r
        - match: '(?==)'
          push:
            - include: main
            - match: (?=[,)])
              pop: true
        - match: \)
          pop: true

  functions:
    - match: \b(function)\s*(\()
      captures:
        1: keyword.control.r
      push:
        - meta_scope: meta.function.r
        - meta_content_scope: meta.function.parameters.r
        - match: '[a-zA-Z._][a-zA-Z0-9._]*'
          scope: variable.parameter.r
        - match: '(?==)'
          push:
            - include: main
            - match: (?=[,)])
              pop: true
        - match: \)
          pop: true

  fncall:
    - match: \b([a-zA-Z._][a-zA-Z0-9._]*)\s*(\()
      captures:
        1: variable.function.r
      push:
        - meta_scope: meta.function-call.r
        - meta_content_scope: meta.function-call.parameters.r
        - match: '[a-zA-Z._][a-zA-Z0-9._]*(?=\s*=)'
          scope: variable.parameter.r
        - match: '(?==)'
          push:
            - include: main
            - match: (?=[,)])
              pop: true
        - match: \)
          pop: true
        - include: main

  roxygen:
    - match: ^(#')\s*
      captures:
        1: punctuation.definition.comment.r
      push:
        - meta_scope: comment.line.roxygen.r
        - match: (@param)\s*([a-zA-Z._][a-zA-Z0-9._]*)
          captures:
            1: keyword.other.r
            2: variable.parameter.r
        - match: '@[a-zA-Z0-9]+'
          scope: keyword.other.r
        - match: $\n?
          pop: true

  main:
    - include: roxygen
    - include: comments
    - include: constants
    - include: keywords
    - include: storage-types
    - include: strings
    - include: brackets
    - include: fndefs
    - include: functions
    - include: "R Support Functions.sublime-syntax"
    - include: fncall
